[{"/Users/arjuna/Projects/Covid-Tracker/src/App.js":"1","/Users/arjuna/Projects/Covid-Tracker/src/components/Header/MainHeader.jsx":"2","/Users/arjuna/Projects/Covid-Tracker/src/components/Header/Navbar.jsx":"3","/Users/arjuna/Projects/Covid-Tracker/src/components/Footer/Footer.jsx":"4","/Users/arjuna/Projects/Covid-Tracker/src/components/Charts/MapChart.js":"5","/Users/arjuna/Projects/Covid-Tracker/src/components/Select/SelectConfig.js":"6","/Users/arjuna/Projects/Covid-Tracker/src/components/Charts/MapUtils.js":"7","/Users/arjuna/Projects/Covid-Tracker/src/config/dev.js":"8","/Users/arjuna/Projects/Covid-Tracker/src/components/Cards/Cards.jsx":"9","/Users/arjuna/Projects/Covid-Tracker/src/components/index.js":"10","/Users/arjuna/Projects/Covid-Tracker/src/index.js":"11","/Users/arjuna/Projects/Covid-Tracker/src/components/Dashboard.jsx":"12","/Users/arjuna/Projects/Covid-Tracker/src/components/Charts/DynamicChart.jsx":"13","/Users/arjuna/Projects/Covid-Tracker/src/components/Charts/ChartConfig.js":"14","/Users/arjuna/Projects/Covid-Tracker/src/api/index.js":"15","/Users/arjuna/Projects/Covid-Tracker/src/components/Select/SimpleSelect.jsx":"16","/Users/arjuna/Projects/Covid-Tracker/src/config/keys.js":"17"},{"size":781,"mtime":1606339076472,"results":"18","hashOfConfig":"19"},{"size":204,"mtime":1605730491483,"results":"20","hashOfConfig":"19"},{"size":2132,"mtime":1606278287252,"results":"21","hashOfConfig":"19"},{"size":837,"mtime":1605747870908,"results":"22","hashOfConfig":"19"},{"size":2076,"mtime":1606347165633,"results":"23","hashOfConfig":"19"},{"size":2808,"mtime":1605729713531,"results":"24","hashOfConfig":"19"},{"size":544,"mtime":1598658532020,"results":"25","hashOfConfig":"19"},{"size":2338,"mtime":1599006558731,"results":"26","hashOfConfig":"19"},{"size":2895,"mtime":1588809228252,"results":"27","hashOfConfig":"19"},{"size":330,"mtime":1606339254681,"results":"28","hashOfConfig":"19"},{"size":233,"mtime":1606274982072,"results":"29","hashOfConfig":"19"},{"size":520,"mtime":1606339254681,"results":"30","hashOfConfig":"19"},{"size":3563,"mtime":1606345928771,"results":"31","hashOfConfig":"19"},{"size":4120,"mtime":1606345937648,"results":"32","hashOfConfig":"19"},{"size":20242,"mtime":1599231907212,"results":"33","hashOfConfig":"19"},{"size":1458,"mtime":1599166977331,"results":"34","hashOfConfig":"19"},{"size":181,"mtime":1599006601153,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1svqulv",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/arjuna/Projects/Covid-Tracker/src/App.js",["78","79","80"],"import React from 'react';\nimport { DynamicChart, MainHeader, Footer, Navbar, Main } from './components';\nimport styles from './App.module.css';\n\nclass App extends React.Component {\n  state = {\n    dataSource: '',\n    dataDate: '',\n  };\n\n  render() {\n\n\n    return (\n      <div className={styles.container}>\n        {/* <MainHeader /> */}\n        <Navbar/>\n        {/* <DynamicChart category={'SF_CASE_DATA'}/>\n        <DynamicChart category={'HOSPITAL_DATA'}/>\n        <DynamicChart category={'GENDER_DATA'}/>\n        <DynamicChart category={'AGE_DATA'}/>\n        <DynamicChart category={'RACE_DATA'}/>\n        <DynamicChart category={'MAP_DATA'}/> */}\n\n        <Main/>\n\n        {/* <Footer source={dataSource} date={dataDate} /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n",["81","82"],"/Users/arjuna/Projects/Covid-Tracker/src/components/Header/MainHeader.jsx",[],["83","84"],"/Users/arjuna/Projects/Covid-Tracker/src/components/Header/Navbar.jsx",[],["85","86"],"/Users/arjuna/Projects/Covid-Tracker/src/components/Footer/Footer.jsx",[],"/Users/arjuna/Projects/Covid-Tracker/src/components/Charts/MapChart.js",["87"],"/Users/arjuna/Projects/Covid-Tracker/src/components/Select/SelectConfig.js",[],["88","89"],"/Users/arjuna/Projects/Covid-Tracker/src/components/Charts/MapUtils.js",[],"/Users/arjuna/Projects/Covid-Tracker/src/config/dev.js",[],"/Users/arjuna/Projects/Covid-Tracker/src/components/Cards/Cards.jsx",[],["90","91"],"/Users/arjuna/Projects/Covid-Tracker/src/components/index.js",[],["92","93"],"/Users/arjuna/Projects/Covid-Tracker/src/index.js",[],"/Users/arjuna/Projects/Covid-Tracker/src/components/Dashboard.jsx",[],"/Users/arjuna/Projects/Covid-Tracker/src/components/Charts/DynamicChart.jsx",["94","95","96"],"import React, { useState, useLayoutEffect } from 'react';\nimport { fetchData, fetchTitle } from './utils';\nimport {\n  dataSetLabels,\n  dateRangeValues,\n  fetchSecondary,\n} from '../Select/SelectConfig';\nimport { MapChart } from './MapChart';\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport { isMobile } from 'react-device-detect';\nimport styles from './DynamicChart.module.css';\nimport SimpleSelect from '../Select/SimpleSelect';\nimport { Skeleton } from '@material-ui/lab';\nimport { composeOptions, composeData, legend, mobileOptions} from './ChartConfig';\nimport Footer from '../Footer/Footer';\n\nconst DynamicChart = ({ category, title }) => {\n  //Chart data:\n  const [currentData, setCurrentData] = useState({});\n  const [totalData, setTotalData] = useState({});\n  const [chartType, setChartType] = useState('');\n  const [ date, setDate ] = useState('')\n  const [ source, setSource] = useState('')\n\n\n  //Input bar:\n  const [dayCount, setDayCount] = useState(90);\n  const [subCategory, setSubCategory] = useState('chart1');\n\n  useLayoutEffect(() => {\n    const fetchAPI = async () => {\n      const data = await fetchData(category);\n      if (category !== 'MAP_DATA') {parseData(data)}\n      else {\n        setChartType('map')\n      }\n      setDayCount(isMobile ? 30 : dayCount);\n    };\n\n    fetchAPI();\n  }, [subCategory, dayCount]);\n\n  const parseData = (data) => {\n    setTotalData(data);\n    setSource(data.source);\n    setDate(data.date_recorded);\n    setCurrentData(data[subCategory]);\n    setChartType(data[subCategory].type);\n  };\n\n  const inputBar = currentData ? (\n    <div className={styles.inputBar}>\n      <h1>{fetchTitle(category)}</h1>\n      <div className={styles.dropdownContainer}>\n      {!isMobile && (\n        <SimpleSelect\n          action={(event) => {\n            setSubCategory(event);\n            setCurrentData(totalData[event]);\n          }}\n          heading='Visualization'\n          values={fetchSecondary(category)}\n          newValue={subCategory}\n        />\n      )}\n      {!isMobile && (\n        <SimpleSelect\n          action={setDayCount}\n          heading='Date Range'\n          values={dateRangeValues}\n          defaultValue={30}\n        />\n      )}\n      </div>\n    </div>\n  ) : null;\n\n\n  const dynamicChart =\n    (chartType === 'average' ||\n      chartType === 'line' ||\n      chartType === 'stacked') &&\n    currentData ? (\n      <Line\n        data={composeData(currentData, dayCount)}\n        // height={\n        //   isMobile ? window.innerHeight * 0.45 : window.innerHeight * 0.15\n        // }\n        // width={}\n        options={composeOptions(currentData, dayCount)}\n        // legend={legend}\n      />\n    ) : null;\n\n  const doughnutChart = currentData ? (\n    <Doughnut\n      data={currentData.primary}\n      // height={isMobile ? window.innerHeight * 0.45 : 100}\n      // width={}\n      options={isMobile ? mobileOptions : {}}\n    />\n  ) : null;\n\n  return currentData ? (\n    <div className={styles.container}>\n      \n      {inputBar}\n      {chartType === 'map' && <MapChart />}\n      {(chartType === 'average' ||\n        chartType === 'line' ||\n        chartType === 'stacked') &&\n        dynamicChart}\n      {chartType === 'doughnut' && doughnutChart}\n      {!isMobile && <Footer date={date} source={source}/>}\n    </div>\n  ) : (\n    <div>\n      <Skeleton variant='text' />\n      <Skeleton variant='circle' width={40} height={40} />\n      <Skeleton variant='rect' width={210} height={151} />\n      <Skeleton variant='rect' width={210} height={151} />\n    </div>\n  );\n};\n\nexport default DynamicChart;\n","/Users/arjuna/Projects/Covid-Tracker/src/components/Charts/ChartConfig.js",[],"/Users/arjuna/Projects/Covid-Tracker/src/api/index.js",[],"/Users/arjuna/Projects/Covid-Tracker/src/components/Select/SimpleSelect.jsx",[],"/Users/arjuna/Projects/Covid-Tracker/src/config/keys.js",[],{"ruleId":"97","severity":1,"message":"98","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"101","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":34},{"ruleId":"97","severity":1,"message":"102","line":2,"column":36,"nodeType":"99","messageId":"100","endLine":2,"endColumn":42},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"103","replacedBy":"109"},{"ruleId":"105","replacedBy":"110"},{"ruleId":"97","severity":1,"message":"111","line":20,"column":20,"nodeType":"99","messageId":"100","endLine":20,"endColumn":31},{"ruleId":"103","replacedBy":"112"},{"ruleId":"105","replacedBy":"113"},{"ruleId":"103","replacedBy":"114"},{"ruleId":"105","replacedBy":"115"},{"ruleId":"103","replacedBy":"116"},{"ruleId":"105","replacedBy":"117"},{"ruleId":"97","severity":1,"message":"118","line":4,"column":3,"nodeType":"99","messageId":"100","endLine":4,"endColumn":16},{"ruleId":"97","severity":1,"message":"119","line":14,"column":39,"nodeType":"99","messageId":"100","endLine":14,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":41,"column":6,"nodeType":"122","endLine":41,"endColumn":29,"suggestions":"123"},"no-unused-vars","'DynamicChart' is defined but never used.","Identifier","unusedVar","'MainHeader' is defined but never used.","'Footer' is defined but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],["124"],["125"],"'setSettings' is assigned a value but never used.",["124"],["125"],["124"],["125"],["124"],["125"],"'dataSetLabels' is defined but never used.","'legend' is defined but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'category' and 'parseData'. Either include them or remove the dependency array.","ArrayExpression",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [subCategory, dayCount, category, parseData]",{"range":"129","text":"130"},[1319,1342],"[subCategory, dayCount, category, parseData]"]